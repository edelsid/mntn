(()=>{var e={607:(e,t,r)=>{"use strict";r.r(t)}},t={};function r(o){var s=t[o];if(void 0!==s)return s.exports;var c=t[o]={exports:{}};return e[o](c,c.exports,r),c.exports}r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r(607);const o=Array.from(document.querySelectorAll(".slider__item")),s=document.querySelector(".scrollup"),c=Array.from(document.querySelectorAll(".stages__item")),a=document.querySelector(".header"),i=Array.from(document.querySelectorAll(".burger__btn")),n=document.querySelector(".burger__menu");c.push(a);document.addEventListener("scroll",(()=>{window.scrollY>200&&!s.classList.contains("active")?s.classList.add("active"):window.scrollY<200&&s.classList.contains("active")&&s.classList.remove("active")})),s.addEventListener("click",(()=>{window.scrollTo({top:0,behavior:"smooth"})}));const l=new IntersectionObserver((e=>{let t;e.forEach((e=>{const r=e.target.classList;e.isIntersecting&&!r.contains("header")?t=o.find((t=>t.attributes.name.value===e.target.id)):e.isIntersecting&&r.contains("header")&&(t=o[0]),t&&(e=>{o.forEach((e=>{e.classList.remove("active")})),e.classList.add("active")})(t)}))}),{root:null,rootMargin:"0px",threshold:.5});c.forEach((e=>{l.observe(e)})),i.forEach((e=>e.addEventListener("click",(()=>{n.classList.contains("active")?n.classList.remove("active"):n.classList.add("active")}))))})();